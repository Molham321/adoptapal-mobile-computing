#------------------------------------
### Access gRPC service
GET http://{{dependent_srv_full_path}}/grpc-hello/Max
Authorization: Basic scott boss

### Access gRPC sink service
GET http://{{dependent_srv_full_path}}/grpc-hello/pipe
Authorization: Basic scott boss


#------------------------------------
# Geoconding Requests

### Request where the service will generate a random location
POST http://{{dependent_srv_full_path}}/geocoding

### Erfurt / FHE
POST http://{{dependent_srv_full_path}}/geocoding?lat=50.98517464339623&long=11.042354543358535

### Jena / Tower
POST http://{{dependent_srv_full_path}}/geocoding?lat=50.928834571437854&long=11.584630107645623

### Get results of first request
GET http://{{dependent_srv_full_path}}/geocoding/1

#------------------------------------
# Accessing the unreliable Service

###
GET http://{{dependent_srv_full_path}}/api/unreliable-single-value-async
Accept: application/json

###
GET http://{{dependent_srv_full_path}}/api/unreliable-multiple-values-async?n=100
Accept: application/json

###
GET http://{{dependent_srv_full_path}}/api/unreliable-multiple-values-async?n=40
Accept: application/json

###
GET http://{{dependent_srv_full_path}}/api/all
Accept: application/json

#------------------------------------
# Contact Endpoint

###
GET http://{{dependent_srv_full_path}}/contacts
Accept: application/json
Authorization: Basic scott boss

###
GET http://{{dependent_srv_full_path}}/contacts/1
Accept: application/json

###
DELETE http://{{dependent_srv_full_path}}/contacts/3

###
POST http://{{dependent_srv_full_path}}/contacts
Content-Type: application/json
Authorization: Basic scott boss

{
  "name": "Avemarg",
  "firstname": "Steffen",
  "mail": "s.avemarg@mail.com"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");

        let locationHeader = response.headers.valueOf("Location")

        client.assert(locationHeader.includes('/contacts/'),
            "Expected '/contacts/' in location header but received '" + locationHeader + "'");

    });
%}

