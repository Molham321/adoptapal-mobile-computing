version: "3.8"

volumes:
  db-data:

services:
  # external services
  gateway:
    image: "traefik:v2.9"
    command:
      - --entrypoints.web.address=:80
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      # NOTE: removed as it's not used right now
      # - --providers.file.filename=/etc/traefik_providers/file_provider.yml
      - --api.dashboard=true
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik:/etc/traefik_providers"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`localhost`) && (PathPrefix(`/api`, `/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"

  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${KAFKA_SERVER}"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  db:
    image: "postgres"
    restart: "always"
    volumes:
      - "db-data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: adoptapal
      POSTGRES_PASSWORD: adoptapal
      POSTGRES_DB: adoptapal

  # internal services
  auth:
    build:
      context: "./auth"
      dockerfile: "./src/main/docker/Dockerfile.jvm"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.auth.entrypoints=web"

  user:
    build:
      context: "./user"
      dockerfile: "./src/main/docker/Dockerfile.jvm"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user.rule=PathPrefix(`/user`)"
      - "traefik.http.routers.user.entrypoints=web"

  animals:
    build:
      context: "./animals"
      dockerfile: "./src/main/docker/Dockerfile.jvm"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.animals.rule=PathPrefix(`/animals`)"
      - "traefik.http.routers.animals.entrypoints=web"
